name: Backoffice Production
on:
  workflow_dispatch:

env:
  DOCKER_IMAGE: techengineer/4ps-fe-core
  CD_PATH: master/vn-luffy-prod/backoffice

jobs:
  build-push:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.get_tag.outputs.tag_name }}
      is_valid_tag: ${{ steps.check_tag.outputs.is_valid_tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.DEVOPS_LUFFY_TOKEN_CI }}
          submodules: recursive

      - name: Get current tag
        id: get_tag
        run: echo "tag_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Check tag format
        id: check_tag
        run: |
          if [[ "${{ steps.get_tag.outputs.tag_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "is_valid_tag=true" >> $GITHUB_OUTPUT
          else
            echo "is_valid_tag=false" >> $GITHUB_OUTPUT
            exit 0
          fi

      - name: Print debug info
        run: |
          echo "Tag: ${{ steps.get_tag.outputs.tag_name }}"
          echo "Is valid: ${{ steps.check_tag.outputs.is_valid_tag }}"

      - name: Login to Docker Hub
        if: steps.check_tag.outputs.is_valid_tag == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Container
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./shells/shell/Dockerfile.prod
          push: true
          network: host
          no-cache: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ steps.get_tag.outputs.tag_name }}

  deploy:
    needs: build-push
    if: needs.build-push.outputs.is_valid_tag == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git
        run: |
          git config --global user.email "${{ secrets.CD_REPO_DEVOPS_EMAIL }}"
          git config --global user.name "${{ secrets.CD_REPO_DEVOPS_USER }}"

      - name: Clone CD repo using token
        run: |
          git clone https://${{ secrets.REPO_TOKEN }}@${{ secrets.CD_REPO_DEVOPS }} cd_repo
          cd cd_repo
          git checkout main

      - name: Validate CD path
        run: |
          cd cd_repo/
          ls -alh $CD_PATH
          echo "Deploying $CD_PATH"

      - name: Update newTag
        run: |
          cd cd_repo
          ls -alh $CD_PATH
          export DOCKER_TAG=${{ needs.build-push.outputs.tag_name }}
          sed -i -E "s/(newTag: )(.*)/\1$DOCKER_TAG/g" $CD_PATH/kustomization.yaml
          sed -i -E "s/(newTag: )(.*)/\1$DOCKER_TAG/g" $CD_PATH/**/kustomization.yaml
          git diff --exit-code || true

      - name: Commit and Push Changes
        run: |
          cd cd_repo
          ls -alh
          export DOCKER_TAG=${{ needs.build-push.outputs.tag_name }}
          git add --all
          git commit -m "Deploy [$DOCKER_IMAGE]:$DOCKER_TAG"
          git push origin main || (git pull --rebase origin main && git push origin main)
